{{- if .Values.networkPolicy.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "controller.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "controller.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      {{- include "controller.selectorLabels" . | nindent 6 }}
  policyTypes:
  - Ingress
  - Egress
  egress:
  {{- if .Values.tracing.enabled }}
  # pushing tracing spans to a collector
  - to:
    - namespaceSelector:
        matchLabels:
          name: {{.Values.tracing.namespace }}
    ports:
    - port: {{ .Values.tracing.port }}
      protocol: TCP
  {{- end }}

  # Kubernetes apiserver access
  - to:
    - ipBlock:
    {{- range .Values.networkPolicy.apiserver }}
        cidr: {{ . }}
    {{- end }}
    ports:
    - port: 443
      protocol: TCP
    - port: 6443
      protocol: TCP

  {{- if .Values.networkPolicy.dns }}
  # DNS egress
  - to:
    - podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - port: 53
      protocol: UDP
  {{- end }}

  ingress:
  {{- with .Values.networkPolicy.prometheus }}
  {{- if .enabled }}
  # prometheus metrics scraping support
  - from:
    - namespaceSelector:
        matchLabels:
          name: {{ .namespace }}
      podSelector:
        matchLabels:
          app: {{ .app }}
    ports:
    - port: {{ .port }}
      protocol: TCP
  {{- end }}
  {{- end }}

{{- end }}
