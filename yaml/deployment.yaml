---
# Source: doc-controller/templates/rbac.yaml
# Scoped service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: doc-controller
  labels:
    app: doc-controller
    app.kubernetes.io/name: doc-controller
    app.kubernetes.io/version: "0.12.5"
  namespace: default
automountServiceAccountToken: true
---
# Source: doc-controller/templates/rbac.yaml
# Access for the service account
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: doc-controller
rules:
  - apiGroups: ["kube.rs"]
    resources: ["documents", "documents/status"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: ["events.k8s.io"]
    resources: ["events"]
    verbs: ["create"]
---
# Source: doc-controller/templates/rbac.yaml
# Binding the role to the account
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: doc-controller
subjects:
- kind: ServiceAccount
  namespace: default
  name: doc-controller
roleRef:
  kind: ClusterRole
  name: doc-controller
  apiGroup: rbac.authorization.k8s.io
---
# Source: doc-controller/templates/service.yaml
# Expose the http port of the service
apiVersion: v1
kind: Service
metadata:
  name: doc-controller
  namespace: default
  labels:
    app: doc-controller
    app.kubernetes.io/name: doc-controller
    app.kubernetes.io/version: "0.12.5"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: doc-controller
---
# Source: doc-controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: doc-controller
  namespace: default
  labels:
    app: doc-controller
    app.kubernetes.io/name: doc-controller
    app.kubernetes.io/version: "0.12.5"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: doc-controller
  template:
    metadata:
      labels:
        app: doc-controller
    spec:
      serviceAccountName: doc-controller
      securityContext:
        {}
      containers:
      - name: doc-controller
        image: "clux/controller:0.12.5"
        imagePullPolicy: IfNotPresent
        securityContext:
          {}
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 100Mi
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        # We are pointing to tempo or grafana tracing agent's otlp grpc receiver port
        - name: OPENTELEMETRY_ENDPOINT_URL
          value: "https://promstack-tempo.monitoring.svc.cluster.local:4317"
        - name: RUST_LOG
          value: "info,kube=debug,controller=debug"
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
